<?php

namespace DAO;


class SalidaDAO extends CoreDAO
{
    public function __construct($db, $table)
    {
        parent::__construct($db, $table);
    }

    function getPager($limit, $actualPage, $paddingPages)
    {
        return parent::getPager($limit, $actualPage, $paddingPages); // TODO: Change the autogenerated stub
    }

    function process(&$result, $item)
    {

        foreach ($item as $clave =>$valor)
        {
            switch ($clave)
            {

                default:
                    $result[$item["salida_anio"]][$item["salida_mes"]][$item["salida_dia"]][$item[$this->idField]][$clave]=$valor;


                break;

                case 'territorio_id':
                    if($item[$this->idField]) {
                        if($item["territorio_id"])
                        {
                            $territorio["territorio_id"]=$item["territorio_id"];
                            $territorio["territorio_numero"]=$item["territorio_numero"];
                            $territorio["territorio_notas"]=$item["territorio_notas"];
                            $territorio["territorio_color"]=$item["territorio_color"];

                            $result[$item["salida_anio"]][$item["salida_mes"]][$item["salida_dia"]][$item[$this->idField]]["territorios"][$item["territorio_id"]]=$territorio;

                        }
                        else
                        {

                            unset($item["territorio_id"]);
                            unset($item["territorio_numero"]);
                            unset($item["territorio_notas"]);
                            unset($item["territorio_color"]);

                        }

                    }

                    break;

                case 'archivo_id':

                    if($item[$this->idField]) {

                        if($item["archivo_id"])
                        {
                            $archivo["archivo_id"]=$item["archivo_id"];
                            $archivo["archivo_data"]=json_decode($item["archivo_data"],true);
                            $archivo["archivo_repositorio"]=$item["archivo_repositorio"];
                            $archivo["archivos_objetos_id"]=$item["archivos_objetos_id"];
                            $result[$item["salida_anio"]][$item["salida_mes"]][$item["salida_dia"]][$item[$this->idField]]["archivos"][$item["archivo_id"]]=$archivo;

                        }
                        else
                        {
                            unset($item["archivo_id"]);
                            unset($item["archivo_data"]);
                            unset($item["archivo_repositorio"]);
                            unset($item["archivos_objetos_id"]);
                        }



                    }

                    break;

            }
        }

    }

    function read($object = array(), $sqlExtra = "", $offset = 0, $limit = false, $joinSql = false)
    {
        return parent::read($object, $sqlExtra, $offset, $limit, $joinSql); // TODO: Change the autogenerated stub
    }

    protected function update($object)
    {
        return parent::update($object); // TODO: Change the autogenerated stub
    }

    function attach($id, $adjuntos)
    {
        return parent::attach($id, $adjuntos); // TODO: Change the autogenerated stub
    }

    function getKeys($object)
    {
        return parent::getKeys($object); // TODO: Change the autogenerated stub
    }

    function insert($object)
    {

        if(is_assoc($object))
        {
            $object["salida_anio"]=date("Y",time());
        }
        return parent::insert($object); // TODO: Change the autogenerated stub
    }

    function upsert($object, ArchivoDAO $archivoData = null)
    {
        return parent::upsert($object, $archivoData); // TODO: Change the autogenerated stub
    }

    function delete($object)
    {
        return parent::delete($object); // TODO: Change the autogenerated stub
    }

}
?>